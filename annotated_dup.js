var annotated_dup =
[
    [ "helpers", null, [
      [ "config_exception", "classhelpers_1_1config__exception.html", "classhelpers_1_1config__exception" ],
      [ "filesystem_exception", "classhelpers_1_1filesystem__exception.html", "classhelpers_1_1filesystem__exception" ],
      [ "top_sort_exception", "classhelpers_1_1top__sort__exception.html", "classhelpers_1_1top__sort__exception" ]
    ] ],
    [ "archivate_task", "classarchivate__task.html", "classarchivate__task" ],
    [ "archivator", "classarchivator.html", null ],
    [ "archive_exception", "classarchive__exception.html", "classarchive__exception" ],
    [ "broker_connection", "classbroker__connection.html", "classbroker__connection" ],
    [ "broker_connection_context", "classbroker__connection__context.html", "classbroker__connection__context" ],
    [ "cache_manager", "classcache__manager.html", "classcache__manager" ],
    [ "command_context", "classcommand__context.html", "classcommand__context" ],
    [ "command_holder", "classcommand__holder.html", "classcommand__holder" ],
    [ "config_error", "classconfig__error.html", "classconfig__error" ],
    [ "connection_proxy", "classconnection__proxy.html", "classconnection__proxy" ],
    [ "cp_task", "classcp__task.html", "classcp__task" ],
    [ "create_params", "structcreate__params.html", "structcreate__params" ],
    [ "empty_progress_callback", "classempty__progress__callback.html", "classempty__progress__callback" ],
    [ "eval_request", "structeval__request.html", "structeval__request" ],
    [ "eval_response", "structeval__response.html", "structeval__response" ],
    [ "external_task", "classexternal__task.html", "classexternal__task" ],
    [ "extract_task", "classextract__task.html", "classextract__task" ],
    [ "fallback_file_manager", "classfallback__file__manager.html", "classfallback__file__manager" ],
    [ "fetch_task", "classfetch__task.html", "classfetch__task" ],
    [ "file_manager_base", "classfile__manager__base.html", "classfile__manager__base" ],
    [ "fileman_config", "structfileman__config.html", "structfileman__config" ],
    [ "fm_exception", "classfm__exception.html", "classfm__exception" ],
    [ "http_manager", "classhttp__manager.html", "classhttp__manager" ],
    [ "isolate_sandbox", "classisolate__sandbox.html", "classisolate__sandbox" ],
    [ "job", "classjob.html", "classjob" ],
    [ "job_client_context", "classjob__client__context.html", "classjob__client__context" ],
    [ "job_evaluator", "classjob__evaluator.html", "classjob__evaluator" ],
    [ "job_evaluator_base", "classjob__evaluator__base.html", "classjob__evaluator__base" ],
    [ "job_exception", "classjob__exception.html", "classjob__exception" ],
    [ "job_metadata", "classjob__metadata.html", "classjob__metadata" ],
    [ "job_receiver", "classjob__receiver.html", "classjob__receiver" ],
    [ "log_config", "structlog__config.html", "structlog__config" ],
    [ "message_origin", "structmessage__origin.html", "structmessage__origin" ],
    [ "mkdir_task", "classmkdir__task.html", "classmkdir__task" ],
    [ "prefixed_file_manager", "classprefixed__file__manager.html", "classprefixed__file__manager" ],
    [ "progress_callback", "classprogress__callback.html", "classprogress__callback" ],
    [ "progress_callback_base", "classprogress__callback__base.html", "classprogress__callback__base" ],
    [ "rename_task", "classrename__task.html", "classrename__task" ],
    [ "rm_task", "classrm__task.html", "classrm__task" ],
    [ "root_task", "classroot__task.html", "classroot__task" ],
    [ "sandbox_base", "classsandbox__base.html", "classsandbox__base" ],
    [ "sandbox_config", "classsandbox__config.html", "classsandbox__config" ],
    [ "sandbox_exception", "classsandbox__exception.html", "classsandbox__exception" ],
    [ "sandbox_limits", "structsandbox__limits.html", "structsandbox__limits" ],
    [ "sandbox_results", "structsandbox__results.html", "structsandbox__results" ],
    [ "task_base", "classtask__base.html", "classtask__base" ],
    [ "task_compare", "classtask__compare.html", "classtask__compare" ],
    [ "task_exception", "classtask__exception.html", "classtask__exception" ],
    [ "task_factory", "classtask__factory.html", "classtask__factory" ],
    [ "task_factory_base", "classtask__factory__base.html", "classtask__factory__base" ],
    [ "task_metadata", "classtask__metadata.html", "classtask__metadata" ],
    [ "task_results", "structtask__results.html", "structtask__results" ],
    [ "worker_config", "classworker__config.html", "classworker__config" ],
    [ "worker_core", "classworker__core.html", "classworker__core" ]
];