# prerequisited:    valid C file /tmp/main.c
#                   NO (or EMPTY) directory /tmp/hello_from_codex_worker
# result:           compiled binary /tmp/hello_from_codex_worker/test
---
submission:
    job-id: hello_evaluation
    language: cpp
    file-collector: http://localhost:9999
    log: true
tasks:
    - task-id: "new_mkdir"
      priority: 1
      fatal-failure: true
      cmd:
          bin: "mkdir"
          args:
              - "/tmp/hello_from_codex_worker"
    - task-id: "copy_to_dir"
      priority: 2
      fatal-failure: true
      dependencies:  # can be omitted if there is no dependencies
        - "new_mkdir"
      cmd:
        bin: "cp"
        args:
            - "/tmp/main.c"
            - "/tmp/hello_from_codex_worker/main.c"
    - task-id: "compile_test01"
      priority: 3
      fatal-failure: false
      dependencies:
        - "copy_to_dir"
      cmd:
        bin: "/usr/bin/gcc"
        args:
            - "-Wall"
            - "-o"
            - "test"
            - "main.c"
      sandbox:  # if defined task is external and will be run in sandbox
        name: "isolate"  # mandatory information
        limits:  # if not defined, then worker default configuration of limits is loaded
             # anything of the specified limits can be omitted and will be loaded from worker defaults
            - hw-group-id: "group1"  # determines specific limits for specific machines
              time: 10  # seconds
              wall-time: 10  # seconds
              extra-time: 2  # seconds
              parallel: 0  # time and memory limits are merged from all potential processes/threads
              environ-variable:
                ISOLATE_BOX: "/box"
                PATH: "/usr/bin"
              chdir: "evaluate"
              bound-directories:
                - src: /tmp/hello_from_codex_worker
                  dst: "evaluate"
                  mode: RW
    - task-id: "run_test01"
      priority: 4
      fatal-failure: false
      dependencies:
        - "compile_test01"
      cmd:
        bin: "./test"
        args: []
        success_exit_codes: # list of exit codes which will be accepted as success
          - 0  # zero is success by default, but if success_exit_codes is present, it must be added explicitly.
          - 1  # single code
          - [100, 200]  # an interval (inclusive)
          # codes 0, 1, 100, 101, ... 199, and 200 will all be accepted
      sandbox:
        name: "isolate"
        limits:
            - hw-group-id: "group1"  # determines specific limits for specific machines
              time: 1  # seconds
              wall-time: 1  # seconds
              extra-time: 1  # seconds
              parallel: 0  # time and memory limits are merged from all potential processes/threads
              environ-variable:
                ISOLATE_BOX: "/box"
                PATH: "/usr/bin"
    - task-id: "remove_created_dir"
      priority: 5
      fatal-failure: false
      cmd:
          bin: "rm"
          args:
              - "/tmp/hello_from_codex_worker/main.c"
...
